(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (volume :label "🔊"
            :value volume
            :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%")
    (battery)
    (wifi)
    time))

; ━━━━ workspaces ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(deflisten workspace "scripts/workspace")

(defwidget workspaces []
  (literal :content workspace))


; ━━━━ music ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "🎵${music}" : ""}))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

; ━━━━ volume ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸
(defwidget volume [label value onchange]
  (box :orientation "h"
       :class "volume"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

; ━━━━ battery ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defwidget battery []
  (box :class "battery"
    :space-evenly false
    (label :class "icon ${ EWW_BATTERY["BAT0"].capacity <= 10 ? 'critical' : '' }"
           :text "${  EWW_BATTERY["BAT0"].capacity >= 95 ? '󰁹 '
                    : EWW_BATTERY["BAT0"].capacity >= 90 ? '󰂂 '
                    : EWW_BATTERY["BAT0"].capacity >= 80 ? '󰂁 '
                    : EWW_BATTERY["BAT0"].capacity >= 70 ? '󰂀 '
                    : EWW_BATTERY["BAT0"].capacity >= 60 ? '󰁿 '
                    : EWW_BATTERY["BAT0"].capacity >= 50 ? '󰁾 '
                    : EWW_BATTERY["BAT0"].capacity >= 40 ? '󰁽 '
                    : EWW_BATTERY["BAT0"].capacity >= 30 ? '󰁼 '
                    : EWW_BATTERY["BAT0"].capacity >= 20 ? '󰁻 '
                    : EWW_BATTERY["BAT0"].capacity >= 10 ? '󰁺 '
                    : '󱃍 ' }")
    (label :text "${EWW_BATTERY["BAT0"].capacity}%  " :halign "center" :xalign 0.5 :justify "right")))


; ━━━━ wifi ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defpoll wifi :initial "0" :interval "1m" "./scripts/wifi.sh")

(defwidget wifi []
  (tooltip
    (label :class "tooltip" :text "${wifi == 0 ? 'Disconnected' : wifi}")
    (box :class "wifi"
      :space-evenly false
      ;(label :class "icon" :text "󱚽󰖪")
      (label
        :class "icon ${wifi == 0 ? 'disconnected' : 'connected'} "
        :text "${wifi == 0 ? '󰖪 ' : '󱚽 ' }"))))


; ━━━━ power ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defpoll power :initial "0" :interval "1m" "./scripts/power.sh")

(defwidget power []
  (tooltip
    (label :class "tooltip" :text "${wifi == 0 ? 'Disconnected' : wifi}")
    (box :class "wifi"
      :space-evenly false
      ;(label :class "icon" :text "󱚽󰖪")
      (label
        :class "icon ${wifi == 0 ? 'disconnected' : 'connected'} "
        :text "${wifi == 0 ? '󰖪 ' : '󱚽 ' }"))))




; ━━━━ time ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸
(defpoll time :interval "10s"
  "date '+%H:%M %b %d'")

; ==== bar ===================================================================
(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "90%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))

; ━━━━ activate linux ╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸
  (defwidget activate-linux []
  (box
    :orientation "v"
    :halign "start"
    :valign "start"
    (label :xalign 0 :markup "<span font_size=\"large\">Activate Linux</span>")
    (label :xalign 0 :text "Go to Settings to activate Linux")))

(defwindow activate-linux
  :monitor 1
  :stacking "bg"
  :geometry (geometry :x "50px" :y "64px" :width "250px" :anchor "bottom right")
  (activate-linux))
